@model HoaDonListModel
@using Nop.Web.Models.NhaXes
@using Nop.Core.Domain.NhaXes
@using Nop.Core.Infrastructure
@Html.ValidationSummary(false)
@{
    Layout = "~/Views/Shared/_NhaXeLayout.cshtml";
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = "Kho hàng";
}
<style>
    .PhieuGuiStatus {
        border-top-right-radius: 55px;
        border-bottom-left-radius: 55px;
        height: 25px;
        cursor: pointer;
        font-size: medium;
        color: #ffffff;
        list-style: none;
        padding: 5px 3px 6px 0;
    }



    .td {
        text-align: center;
    }

    .divcount {
        font-weight: bolder;
        text-align: center;
    }
</style>
@Html.HiddenFor(model => model.TrangThaiVanChuyenId)
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Content/chonve/nxmenu/hanhtrinhlichtrinh.png")" alt="" />
        Danh sách phiếu gửi trong kho
    </div>
    <div class="options">

        <input  type="button" id="BtnXuatHang" class="k-button" value="Gán xe" />
        <input style="display:none" type="button" id="BtnTraHangChoKhach" class="k-button" value="Trả hàng cho khách" />
    </div>
</div>
<table width="100%">
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.MaPhieu):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.MaPhieu)
        </td>
    </tr>
    <tr id="TenNguoiGui">
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.TenNguoiGui):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.TenNguoiGui)
        </td>
    </tr>                     
    <tr id=" TenNguoiNhan" style="display:none">
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.TenNguoiNhan):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.TenNguoiNhan)
        </td>
    </tr>
    <tr id="VanPhongNhan">
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.VanPhongNhanId):
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.VanPhongNhanId, Model.VanPhongs)
        </td>
    </tr>
    <tr id="VanPhongGui" style="display:none">
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.VanPhongGuiId):
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.VanPhongGuiId, Model.VanPhongs)
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <input type="button" id="btnSearch" class="k-button" value="@T("Admin.Common.Search")" />
        </td>
    </tr>
</table>
<table style="width:530px">
    <tr>
        <td class="PhieuGuiStatus" style="background: #F44336" id="PhieuChuaGui">
            <img style="margin-left:30px" src="@Url.Content("~/Administration/Content/images/icon_pendding.png")" alt="" />

            Phiếu chưa gửi <span class="divcount">(@Model.CountPhieuChuaGui)</span>
        </td>
        <td class="PhieuGuiStatus" style="background: #216516" id="PhieuDaNhan">
            <img style="margin-left:30px" src="@Url.Content("~/Administration/Content/images/ico_processing.png")" alt="" />

            Phiếu đã nhận <span class="divcount">(@Model.CountPhieuDaNhan)</span>
        </td>

    </tr>
</table>
<table class="adminContent">
    <tr>
        <td>
            <div id="danhsach-grid"></div>

            <script>

                $(document).ready(function () {


                    $("#danhsach-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("KhoHang", "NhaXeHangHoa"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors"
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)],
                            messages: {
                                display: "@T("Nop.Common.KendoGrid.display")", //{0} is the index of the first record on the page, {1} - index of the last record on the page, {2} is the total amount of records
                                empty: "@T("Nop.Common.KendoGrid.Empty")",
                                page: "@T("Nop.Common.KendoGrid.Page")",
                                of: "@T("Nop.Common.KendoGrid.Of")", //{0} is total amount of pages
                                itemsPerPage: "@T("Nop.Common.KendoGrid.itemsPerPage")",
                                first: "@T("Nop.Common.KendoGrid.first")",
                                previous: "@T("Nop.Common.KendoGrid.previous")",
                                next: "@T("Nop.Common.KendoGrid.next")",
                                last: "@T("Nop.Common.KendoGrid.last")",
                                refresh: "@T("Nop.Common.KendoGrid.refresh")"
                            }
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        scrollable: false,
                        dataBound: onDataBound,
                        columns: [{
                            field: "Id",
                            headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                            width: 50
                        },{
                            field: "MaPhieu",
                            title: "Mã phiếu",
                            template:'#="<a href=\'javascript:ChiTietPGH("+Id+")\'>"+MaPhieu+"</a>"#'
                        }, {
                            field: "VanPhongGui.TenVanPhong",
                            title: "Tên văn phòng Gửi"
                        }, {
                            field: "VanPhongNhan.TenVanPhong",
                            title: "Tên văn phòng nhận"
                            
                        },  {
                            field: "NguoiGui.HoTen",
                            title: "Tên người gửi"
                        }, {
                            field: "NguoiNhan.HoTen",
                            title: "Tên người nhận"
                        }, {
                            field: "HangHoaInfo",
                            title: "Thông tin hàng hóa"
                        },{
                            field: "ThanhToan",
                            title: "Thanh toán"
                        },{
                            field: "NgayTao",
                            title: "Ngày tạo",
                            type: "date",
                            format: "{0:dd/MM/yyyy}"

                        },{
                            field: "NgayNhan",
                            title: "Ngày nhận",
                            type: "date",
                            format: "{0:dd/MM/yyyy}"

                        }, {
                            field: "TenXeXuatBen",
                            title: "Thông tin xe",
                            

                        },{
                            field: "Id",
                            title: "Phiếu",
                            width: 100,
                            template: '<a href="/NhaXeCauHinh/InPhieu?MaId=@((int)Nop.Core.Domain.NhaXes.ENNhaXeCauHinh.KY_GUI_PHIEU_GUI_HANG)&Id=#=Id#" class="k-button" target="_blank">In phiếu</a>'
                        },]
                    });
                });
                function additionalData() {
                    return {
                        MaPhieu: $('#@Html.FieldIdFor(model => model.MaPhieu)').val(),
                        TenNguoiGui: $('#@Html.FieldIdFor(model => model.TenNguoiGui)').val(),
                        VanPhongGuiId: $('#@Html.FieldIdFor(model => model.VanPhongGuiId)').val(),
                        VanPhongNhanId: $('#@Html.FieldIdFor(model => model.VanPhongNhanId)').val(),
                        TrangThaiVanChuyenId: $('#@Html.FieldIdFor(model => model.TrangThaiVanChuyenId)').val(),

                    };
                }


            </script>

        </td>
    </tr>
</table>
<script type="text/javascript">

    var selectedIds = [];

    $(document).ready(function () {
        var _grid = $('#danhsach-grid').data('kendoGrid');
        _grid.hideColumn("VanPhongGui.TenVanPhong");
        _grid.hideColumn("NgayNhan");
        _grid.hideColumn("TenXeXuatBen");
        $('#btnSearch').click(function () {
            var grid = $('#danhsach-grid').data('kendoGrid');
            grid.dataSource.page(1); //new search. Set page size to 1

            $('.checkboxGroups').attr('checked', false).change();
            selectedIds = [];
            return false;
        });
        $("#@Html.FieldIdFor(model => model.TenNguoiGui)").keydown(function (event) {
            if (event.keyCode == 3) {
                $("#btnSearch").click();
                return false;
            }
        });
        $("#@Html.FieldIdFor(model => model.TenNguoiNhan)").keydown(function (event) {
            if (event.keyCode == 3) {
                $("#btnSearch").click();
                return false;
            }
        });
        $("#@Html.FieldIdFor(model => model.MaPhieu)").keydown(function (event) {
            if (event.keyCode == 13) {
                $("#btnSearch").click();
                return false;
            }
        });
        $("#@Html.FieldIdFor(model => model.VanPhongNhanId)").change(function () {
            $("#btnSearch").click();
            return false;
        });
        $("#@Html.FieldIdFor(model => model.VanPhongGuiId)").change(function () {
            $("#btnSearch").click();
            return false;
        });
        $('#PhieuChuaGui').click(function() {
            $('#@Html.FieldIdFor(model => model.TrangThaiVanChuyenId)').val(@((int)ENTinhTrangVanChuyen.ChuaVanChuyen))

            $(this).css('background', '#F44336');
            $('#PhieuDaNhan').css('background', '#216516');
            $("#btnSearch").click();
            DisplayFieldFollowStatus(true);
            return false;
        });
        $('#PhieuDaNhan').click(function() {
            $('#@Html.FieldIdFor(model => model.TrangThaiVanChuyenId)').val(@((int)ENTinhTrangVanChuyen.NhanHang))
            $(this).css('background', '#F44336');
            $('#PhieuChuaGui').css('background', '#216516');
            $("#btnSearch").click();
            DisplayFieldFollowStatus(false);
            return false;
        });

        $('#mastercheckbox').click(function () {
            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
        });

        //wire up checkboxes.
        $('#danhsach-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
    });
    function DisplayFieldFollowStatus(editmode) {
        var _grid = $('#danhsach-grid').data('kendoGrid');
        if (editmode) {

            $('#VanPhongGui').hide();
            $('#VanPhongNhan').show();
            $('#BtnXuatHang').show();
            $('#BtnTraHangChoKhach').hide();
            $('#TenNguoiGui').show();
            $('#TenNguoiNhan').hide();
           
            _grid.hideColumn("VanPhongGui.TenVanPhong");
            _grid.hideColumn("TenXeXuatBen");
            _grid.hideColumn("NgayNhan");
            _grid.showColumn("VanPhongNhan.TenVanPhong");
            _grid.showColumn("NgayTao");        

           
        } else {
            $('#VanPhongGui').show();
            $('#VanPhongNhan').hide();
            $('#BtnTraHangChoKhach').show();
            $('#BtnXuatHang').hide();
            $('#TenNguoiGui').hide();
            $('#TenNguoiNhan').show();
            _grid.showColumn("VanPhongGui.TenVanPhong");
            _grid.showColumn("NgayNhan");
            _grid.showColumn("TenXeXuatBen");
            _grid.hideColumn("VanPhongNhan.TenVanPhong");
            _grid.hideColumn("NgayTao");          
        }
    }
    function onDataBound(e) {

        $('#danhsach-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            //set checked based on if current checkbox's value is in selectedIds.
            $(this).attr('checked', checked > -1);
        });

        updateMasterCheckbox();
        // color row in grid
        //var items = this._data;
        //var tableRows = $(this.table).find("tr");
        //tableRows.each(function(index) {
        //    var row = $(this);
        //    var Item = items[index];
        //    if (Item.name !== "Jane Doe") {
        //        row.addClass("green");
        //    }else{
        //        row.addClass("red");
        //    }
       
    }

    function updateMasterCheckbox() {
        var numChkBoxes = $('#danhsach-grid input[type=checkbox][id!=mastercheckbox]').length;
        var numChkBoxesChecked = $('#danhsach-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
    }
   
        $('#BtnXuatHang').click(function (e) {

            var ids = selectedIds.join(",");
            SelectXeXuatBen(ids);

        });
        $('#BtnTraHangChoKhach').click(function (e) {
            var ids = selectedIds.join(",");
            if(ids=="")
            {
                return  alert("Bạn chưa chọn phiếu gửi hàng");
           
            }
            if(confirm ("Bạn có chắc chắn?"))
            {
                ReturnGoodsToCutomer(ids);
            }
            

        });
   
    function SelectXeXuatBen(ids) {
        if(ids=="")
        {
            return  alert("Bạn chưa chọn phiếu gửi hàng");
           
        }
        var formopen = $("#PopupXeXuatBen");
        formopen.html("");
        formopen.kendoWindow({
            width: "500px",
            title: "Chọn xe chứa hàng hóa",
            content: "@(Url.Action("ListXeXuatBen", "NhaXeHangHoa"))?ids=" +ids  ,
            actions: [
                "Close"
            ]
        }).data('kendoWindow').center();
        formopen.data('kendoWindow').open();

    }
    function SetCloseWindowDatMuaVeXe() {
        $("#PopupXeXuatBen").data('kendoWindow').close();

    }
    function SetCenterWindowDatMuaVeXe() {
        $("#PopupXeXuatBen").data('kendoWindow').center();
    }
    function ReturnGoodsToCutomer(ids) {
       
        $.ajax({
            cache: false,
            type: "POST",
            data: { "ids": ids },
            dataType: 'json',
            url: "@(Url.Action("TraHangChoKhach", "NhaXeHangHoa"))",
            success: function (data) {
                ////var info = data.split(';');
                document.location.href = "/NhaXeHangHoa/KhoHang";
                $('#PhieuDaNhan').click();
            },            
    });
       

    }
</script>
<div id="PopupXeXuatBen">

</div>
@Html.Partial("_PhieuGuiHangWindow")