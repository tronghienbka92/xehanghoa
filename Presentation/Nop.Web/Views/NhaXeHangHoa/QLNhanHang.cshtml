@model HoaDonListModel
@using Nop.Web.Models.NhaXes
@using Nop.Core.Domain.NhaXes
@using Nop.Core.Infrastructure
@Html.ValidationSummary(false)
@{
    Layout = "~/Views/Shared/_NhaXeLayout.cshtml";
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = "Quản lý nhận hàng";
}

@Html.HiddenFor(model=>model.TrangThaiVanChuyenId)
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Content/chonve/nxmenu/hanhtrinhlichtrinh.png")" alt="" />
        Danh sách phiếu hàng được gửi đến
    </div>
    <div class="options">
       
        <input type="button" id="BtnNhanHang" class="k-button" value="Nhận phiếu" />
    </div>
</div>
<table width="100%">
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.MaPhieu):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.MaPhieu)
        </td>
    </tr> 
   
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.VanPhongGuiId):
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.VanPhongGuiId, Model.VanPhongs)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.XeXuatBenId):
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.XeXuatBenId, Model.XeXuatBens)
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <input type="button" id="btnSearch" class="k-button" value="@T("Admin.Common.Search")" />
        </td>
    </tr>
</table>
<table class="adminContent">
    <tr>
        <td>
            <div id="danhsach-grid"></div>

            <script>
                
                $(document).ready(function () {
                    

                    $("#danhsach-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("QLNhanHang", "NhaXeHangHoa"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors"
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)],
                            messages: {
                                display: "@T("Nop.Common.KendoGrid.display")", //{0} is the index of the first record on the page, {1} - index of the last record on the page, {2} is the total amount of records
                                empty: "@T("Nop.Common.KendoGrid.Empty")",
                                page: "@T("Nop.Common.KendoGrid.Page")",
                                of: "@T("Nop.Common.KendoGrid.Of")", //{0} is total amount of pages
                                itemsPerPage: "@T("Nop.Common.KendoGrid.itemsPerPage")",
                                first: "@T("Nop.Common.KendoGrid.first")",
                                previous: "@T("Nop.Common.KendoGrid.previous")",
                                next: "@T("Nop.Common.KendoGrid.next")",
                                last: "@T("Nop.Common.KendoGrid.last")",
                                refresh: "@T("Nop.Common.KendoGrid.refresh")"
                            }
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        scrollable: false,
                        dataBound: onDataBound,
                        columns: [{
                            field: "Id",
                            headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                            width: 50
                        },{
                            field: "MaPhieu",
                            title: "Mã phiếu",
                            template:'#="<a href=\'javascript:ChiTietPGH("+Id+")\'>"+MaPhieu+"</a>"#'
                        }, {
                            field: "VanPhongGui.TenVanPhong",
                            title: "Tên văn phòng nhận"
                        },{
                            field: "HangHoaInfo",
                            title: "Thông tin hàng hóa"
                        },{
                            field: "TenXeXuatBen",
                            title: "Xe xuất bến"
                        },{
                            field: "ThanhToan",
                            title: "Thanh toán"
                        }, {
                            field: "NgayDi",
                            title: "Ngày đi",
                            type: "date",
                            format: "{0:dd/MM/yyyy}"

                        },  {
                            field: "TenNguoiKiemTraHang",
                            title: "Người kiểm tra hàng",

                        },{
                            field: "Id",
                            title: "Phiếu",
                            width: 100,
                            template: '<a href="/NhaXeCauHinh/InPhieu?MaId=@((int)Nop.Core.Domain.NhaXes.ENNhaXeCauHinh.KY_GUI_PHIEU_GUI_HANG)&Id=#=Id#" class="k-button" target="_blank">In phiếu</a>'
                        },]
                    });
                });
                function additionalData() {
                    return {
                        MaPhieu: $('#@Html.FieldIdFor(model => model.MaPhieu)').val(),
                        XeXuatBenId:$('#@Html.FieldIdFor(model => model.XeXuatBenId)').val(),   
                        VanPhongGuiId: $('#@Html.FieldIdFor(model => model.VanPhongGuiId)').val(),                        
                       
                    };
                }
               

            </script>

        </td>
    </tr>
</table>
<script type="text/javascript">

                    var selectedIds = [];

                    $(document).ready(function () {
                        var _grid = $('#danhsach-grid').data('kendoGrid');
                        var data = _grid.dataSource.data();
                        
                        $.each(data, function (i, row) {
                            var value=_grid.table.find('ThanhToan').data();
                            if (value=='Chưa thanh toán')
                            {
                                $('tr[data-uid="' + row.uid + '"] ').css("background-color", "red");
                            }                               
                        });


                     $('#btnSearch').click(function () {
                        var grid = $('#danhsach-grid').data('kendoGrid');
                        grid.dataSource.page(1); //new search. Set page size to 1

                        $('.checkboxGroups').attr('checked', false).change();
                        selectedIds = [];
                        return false;
                    });
                    $("#@Html.FieldIdFor(model => model.TenNguoiGui)").keydown(function (event) {
                        if (event.keyCode == 3) {
                            $("#btnSearch").click();
                            return false;
                        }
                    });
                    $("#@Html.FieldIdFor(model => model.MaPhieu)").keydown(function (event) {
                        if (event.keyCode == 13) {
                            $("#btnSearch").click();
                            return false;
                        }
                    });

                    $("#@Html.FieldIdFor(model => model.VanPhongGuiId)").change(function () {
                        $("#btnSearch").click();
                        return false;
                    });                             
                        $("#@Html.FieldIdFor(model => model.XeXuatBenId)").change(function () {
                            $("#btnSearch").click();
                            return false;
                        });  
                        $('#mastercheckbox').click(function () {                           
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        //wire up checkboxes.
                        $('#danhsach-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                            var $check = $(this);
                            if ($check.is(":checked") == true) {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked == -1) {
                                    //add id to selectedIds.
                                    selectedIds.push($check.val());
                                }
                            }
                            else {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked > -1) {
                                    //remove id from selectedIds.
                                    selectedIds = $.grep(selectedIds, function (item, index) {
                                        return item != $check.val();
                                    });
                                }
                            }
                            updateMasterCheckbox();
                        });
                    });

                    function onDataBound(e) {

                       
                        
                        $('#danhsach-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                            var currentId = $(this).val();
                            var checked = jQuery.inArray(currentId, selectedIds);
                            //set checked based on if current checkbox's value is in selectedIds.
                            $(this).attr('checked', checked > -1);
                        });

                        updateMasterCheckbox();
                    }

                    function updateMasterCheckbox() {
                        var numChkBoxes = $('#danhsach-grid input[type=checkbox][id!=mastercheckbox]').length;
                        var numChkBoxesChecked = $('#danhsach-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
                        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    }


</script>
<script type="text/javascript">

    $(document).ready(function () {
        
       
        $('#BtnNhanHang').click(function (e) {
            var ids = selectedIds.join(",");
            if(ids=="")
            {
                return  alert("Bạn chưa chọn phiếu gửi hàng!");

            }
            if(confirm ("Bạn có chắc chắn?"))
            {
                StaffGetGoods(ids);
            }
            

        });
    });
   
    function StaffGetGoods(ids) {
       
        $.ajax({
            cache: false,
            type: "POST",
            data: { "ids": ids },
            dataType: 'json',
            url: "@(Url.Action("NhanVienNhanHang", "NhaXeHangHoa"))",
            success: function (data) {
                ////var info = data.split(';');
                document.location.href = "/NhaXeHangHoa/QLNhanHang";

            },
    });


    }
</script>
@Html.Partial("_PhieuGuiHangWindow")