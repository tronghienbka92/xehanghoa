@model CustomerInfoModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
<style>
    .title {
        font-size: 23px;
        border-style: outset;
        color: rgba(11, 105, 115, 0.9);
        text-align: center;
        font-family: initial;
    }
</style>
@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.Info })
}
<h2 class="title" style="margin-bottom: 0px;">Thông tin cá nhân</h2>
<div style="text-align:center">

    <img width="50" src="~/Content/chonve/nhaxe/hoasen2.jpg" />
</div>
<div>
    <ul>
        <li style="border-color: #CABCBC">
            @T("Account.CustomerInfo")
        </li>
        <li style="border-color: #CABCBC">
            @T("Account.RewardPoints")
        </li>
        <li style="border-color: #CABCBC">
            @T("Account.ChangePassword")
        </li>
    </ul>

    <div style="border-color: #CABCBC">
        @TabInfoCustomer()
    </div>
    <div style="border-color: #CABCBC">
        @TabRewardPoints()
    </div>
    <div style="border-color: #CABCBC">
        @TabChangePassword()
    </div>

</div>
@helper  TabInfoCustomer()
{

    <div class="features_items my-account-page">
        <!--features_items-->

        <div class="custom-page-box-div">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="message-error">
                    @Html.ValidationSummary(true)
                </div>
                <div class="fieldset">
                    <div id="legend">
                        <legend>@T("Account.YourPersonalDetails")</legend>
                    </div>
                    <div class="form-fields">
                        <div class="form-group row">
                            <div class="col-md-2 ">
                                @Html.LabelFor(model => model.Email, new { @class = "", @style = "font-weight: bold;" }, ":")
                            </div>
                            <div class="col-md-6" style="width:300px">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @style = "height:18px", @disabled = "disabled" })

                            </div>

                            <div class="col-md-2">

                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.FullName, new { @class = "col-md- control-label", @style = "font-weight: bold;" }, ":")
                            </div>
                            <div class="col-md-6" style="width:300px">
                                @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", @style = "height:18px" })
                            </div>
                            <div class="col-md-3">
                                <span style="color:red"> @Html.RequiredHint()</span>
                                @Html.ValidationMessageFor(model => model.FullName)
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-2 ">
                                @Html.LabelFor(model => model.DateOfBirthDay, new { @class = "", @style = "font-weight: bold;" }, ":")
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.DateOfBirthDay)
                                @Html.ValidationMessageFor(model => model.DateOfBirthDay)
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-2 " style="font-weight: bold;">@T("Account.Fields.Gender"):</label>
                            <div class="col-md-9">
                                @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "gender-male" })
                                <label class="forcheckbox  " for="gender-male">@T("Account.Fields.Gender.Male")</label>
                                @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "gender-female" })
                                <label class="forcheckbox " for="gender-female">@T("Account.Fields.Gender.Female")</label>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Phone, new { @class = "col-md-2", @style = "font-weight: bold;" }, ":")
                            <div class="col-md-6" style="width:300px">
                                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @style = "height:18px" })
                            </div>
                            <div class="col-md-4">
                                @Html.ValidationMessageFor(model => model.Phone)
                            </div>
                        </div>

                    </div>
                </div>
                <div class="fieldset">
                    <div id="legend">
                        <legend class="">@T("Account.Options")</legend>
                    </div>
                    <div class="form-fields">
                        <div class="form-group row">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Newsletter, new { @class = "" }, ":")
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Newsletter, new { @class = "" })
                            </div>
                            <div class="col-md-4">
                                @Html.ValidationMessageFor(model => model.Newsletter)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="buttons pull-right">
                            <input type="submit" value="@T("Common.CapNhat")" style="width: 150px;
    height: 30px;" class="button-1 register-next-step-button btn btn-success" />
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>
}
@helper TabRewardPoints()
{
    <div class="features_items my-account-page">
        <div class="custom-page-box-div">
            <div class="reward-points-overview">
                <div class="current-balance">@T("RewardPoints.CurrentBalance", Model.CustomerReward.RewardPointsBalance, Model.CustomerReward.RewardPointsAmount)</div>
                @if (Model.CustomerReward.MinimumRewardPointsBalance > 0)
                {
                    <div class="min-balance">@T("RewardPoints.MinimumBalance", Model.CustomerReward.MinimumRewardPointsBalance, Model.CustomerReward.MinimumRewardPointsAmount)</div>
                }
            </div>
            <div class="space15px"></div>
            <div class="reward-points-history">
                <div class="title">
                    <strong>@T("RewardPoints.History")</strong>
                </div>
                @if (Model.CustomerReward.RewardPoints.Count > 0)
                {
                    <div id="cart_items">
                        <div class="table-responsive cart_info">
                            <table class="table table-condensed">
                                <thead>
                                    <tr class="cart_menu">
                                        <td class="a-center date">
                                            @T("RewardPoints.Fields.Date")
                                        </td>
                                        <td class="a-center points">
                                            @T("RewardPoints.Fields.Points")
                                        </td>
                                        <td class="a-center points-balance">
                                            @T("RewardPoints.Fields.PointsBalance")
                                        </td>
                                        <td class="a-center message">
                                            @T("RewardPoints.Fields.Message")
                                        </td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.CustomerReward.RewardPoints.Count; i++)
                                    {
                                        var item = Model.CustomerReward.RewardPoints[i];
                                        <tr @(i % 2 == 0 ? Html.Raw(" class=\"odd\"") : Html.Raw(" class=\"even\""))>
                                            <td class="a-center date">
                                                @item.CreatedOn
                                            </td>
                                            <td class="a-center points">
                                                @item.Points
                                            </td>
                                            <td class="a-center points-balance">
                                                @item.PointsBalance
                                            </td>
                                            <td class="a-left message">
                                                @item.Message
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    @T("RewardPoints.NoHistory")
                }
            </div>
        </div>
    </div>
}
@helper  TabChangePassword()
{
    <div class="features_items my-account-page">

        <div class="custom-page-box-div">
            <div class="message-error">
                @Html.ValidationSummary(true)
            </div>
            @if (!String.IsNullOrEmpty(Model.ChangePassword.Result))
            {
                <div class="result">
                    @Model.ChangePassword.Result
                </div>
            }
            <div class="fieldset">
                <div class="">
                    <div class="form-group row">
                        <div class="col-md-2 ">
                            @Html.LabelFor(model => model.ChangePassword.OldPassword, new { @class = "" }, ":")
                        </div>
                        <div class="col-md-6" style="width:300px">
                            @Html.TextBoxFor(model => model.ChangePassword.OldPassword, new { @class = "form-control", @style = "height:18px", Type = "password" })
                        </div>

                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.ChangePassword.OldPassword)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2 ">
                            @Html.LabelFor(model => model.ChangePassword.NewPassword, new { @class = "" }, ":")
                        </div>
                        <div class="col-md-6" style="width:300px">
                            @Html.TextBoxFor(model => model.ChangePassword.NewPassword, new { @class = "form-control", @style = "height:18px", Type = "password" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.ChangePassword.NewPassword)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2 ">
                            @Html.LabelFor(model => model.ChangePassword.ConfirmNewPassword, new { @class = "" }, ":")
                        </div>
                        <div class="col-md-6" style="width:300px">
                            @Html.TextBoxFor(model => model.ChangePassword.ConfirmNewPassword, new { @class = "form-control", @style = "height:18px", Type = "password" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.ChangePassword.ConfirmNewPassword)
                        </div>
                    </div>
                </div>
            </div>

            <div class="buttons">
                <input type="button" id="btnChangePassword" class="button-1 btn btn-primary pull-right" value="@T("Account.ChangePassword.Button")" />
            </div>
        </div>
    </div>
    <script type="text/javascript">

        $(document).ready(function () {
            $('#btnChangePassword').click(function () {
               var OldPassword= $('#@Html.FieldIdFor(model => model.ChangePassword.OldPassword)').val()
               var NewPassword= $('#@Html.FieldIdFor(model => model.ChangePassword.NewPassword)').val()
                $('#btnChangePassword').attr('disabled', true);
                $.ajax({
                    cache: false,
                    type: "POST",
                    data: { "OldPassword": OldPassword, "NewPassword": NewPassword },
                    url: "@(Url.Action("ChangePassword", "Customer"))",
                    dataType: 'json',
                    success: function (data) {
                        if (data.success) {
                            alert('@T("ChangePassword.success")');
                            document.location.href = "/Customer/Info";
                        }
                        else {
                            alert('@T("ChangePassword.error")');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('@T("NopWeb.changePassword.Loi")');
                        $('#btnChangePassword').attr('disabled', false);
                    }

                });
            });

        });

    </script>
}

