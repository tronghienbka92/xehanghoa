@model OrderListModel
@using Nop.Core.Domain.Orders;
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Orders").Text;
}
@Html.HiddenFor(model => model.OrderStatusId);
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Admin.ListOrders")
        </div>
    </div>
    <table width="45%" style="margin: 20px 0 20px 0;">
        <tr>
            <td id="title">Lọc đơn hàng:</td>
            <td class="td">
                @Html.DropDownList("PaymentStatusId", Model.AvailablePaymentStatuses, new {@style="border-radius: 12px; height: 30px;" })
            </td>
            <td class="td">
                @Html.DropDownList("ShippingStatusId", Model.AvailableShippingStatuses, new { @style = "border-radius: 12px; height: 30px;" })
            </td>
           
        </tr>
    </table>
    <table style="width:750px">
        <tr>
            <td class="OrderStatus" id="OrderPending">
                <img class="img" src="@Url.Content("~/Administration/Content/images/icon_pendding.png")" alt="" />
               
                @T("Admin.Order.Orderstatus.Pending") <span class="divcount">(@Model.CountOrderPending)</span>
            </td>
            <td class="OrderStatus" id="OrderProcessing">
                <img class="img" src="@Url.Content("~/Administration/Content/images/ico_processing.png")" alt="" />
                
                @T("Admin.Order.Orderstatus.Processing") <span class="divcount">(@Model.CountOrderProcessing)</span>
            </td>
            <td class="OrderStatus" id="OrderComplete">
                
                <img class="img" src="@Url.Content("~/Administration/Content/images/ico_hoanthanh.png")" alt="" />
                @T("Admin.Order.Orderstatus.Complete") <span class="divcount">(@Model.CountOrderComplete)</span>
            </td>
        </tr>
    </table>
   
    
    <style>
        .OrderStatus {
            background: #2196F3;
            border-top-right-radius: 55px;
            border-bottom-left-radius: 55px;
            height: 25px;
            cursor: pointer;
            font-size: medium;
            color: #ffffff;
            list-style: none;
            padding: 5px 3px 6px 0;
        }
        .tdCategory {
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 13.5px 0 13.5px 21px;
            border-color: transparent transparent transparent #28bd93;
        }

        .td {
            text-align: center;
        }
        .img {
            margin-left:20px;
        }

        .divcount {
            font-weight: bolder;
            text-align: center;
            
        }
        #title {
            font-weight: bold;
            font-size: 15px;
            color: rgba(0, 0, 0, 0.61);
        }
    </style>
    <div id="orders-grid"></div>
    <script>
        $(document).ready(function() {
            $('#OrderPending').css('background', '#FFC107');
            $("#@Html.FieldIdFor(model => model.ShippingStatusId)").change(function () {

                var gridorder=$('#orders-grid').data("kendoGrid");
                gridorder.dataSource.page(1);
                return false;
            });
            $("#@Html.FieldIdFor(model => model.PaymentStatusId)").change(function () {
                var gridorder=$('#orders-grid').data("kendoGrid");
                gridorder.dataSource.page(1);
                return false;
            });

            $('#OrderPending').click(function() {
                $('#@Html.FieldIdFor(model => model.OrderStatusId)').val(@((int)OrderStatus.Pending))
                $(this).css('background', '#FFC107');
                $('#OrderProcessing').css('background', '#2196F3');
                $('#OrderComplete').css('background', '#2196F3');
                var gridorder=$('#orders-grid').data("kendoGrid");
                gridorder.dataSource.page(1);
                return false;
            });
            $('#OrderProcessing').click(function() {
                $('#@Html.FieldIdFor(model => model.OrderStatusId)').val(@((int)OrderStatus.Processing))
                $(this).css('background', '#FFC107');
                $('#OrderPending').css('background', '#2196F3');
                $('#OrderComplete').css('background', '#2196F3');
                var gridorder=$('#orders-grid').data("kendoGrid");
                gridorder.dataSource.page(1);
                return false;
            });
            $('#OrderComplete').click(function() {
                $('#@Html.FieldIdFor(model => model.OrderStatusId)').val(@((int)OrderStatus.Complete))
                $(this).css('background', '#FFC107');
                $('#OrderPending').css('background', '#2196F3');
                $('#OrderProcessing').css('background', '#2196F3');
                var gridorder=$('#orders-grid').data("kendoGrid");
                gridorder.dataSource.page(1);
                return false;
            });
            $("#orders-grid").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "@Html.Raw(Url.Action("OrderList", "Order"))",
                            type: "POST",
                            dataType: "json",
                            data: additionalData
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "Total",
                        errors: "Errors"
                    },
                    requestEnd: function (e) {
                        if (e.type == "read") {
                            var response = e.response;
                            if (response) {
                                //store extra data
                                reportAggregates = e.response["ExtraData"];
                            }
                        }
                    },
                    error: function(e) {
                        display_kendoui_grid_error(e);
                        // Cancel the changes
                        this.cancelChanges();
                    },
                    pageSize: @(defaultGridPageSize),
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true,
                    pageSizes: [@(gridPageSizes)]
                },
                editable: {
                    confirmation: false,
                    mode: "inline"
                },
                scrollable: false,

                columns: [

                    {
                        field: "Id",
                        title: "@T("Admin.Orders.Fields.ID")",
                        width: 50
                    },
                    @if (!Model.IsLoggedInAsVendor)
                                {
                                    //a vendor does not have access to this functionality
                                    <text>{
                        field: "OrderStatus",
                        title: "@T("Admin.Orders.Fields.OrderStatus")",
                        width: 200
                    },</text>
                                }
                    {
                        field: "PaymentStatus",
                        title: "@T("Admin.Orders.Fields.PaymentStatus")",
                        width: 200
                    },
                    @if (!Model.IsLoggedInAsVendor)
                                {
                                    //a vendor does not have access to this functionality
                                    <text>{
                        field: "ShippingStatus",
                        title: "@T("Admin.Orders.Fields.ShippingStatus")",
                        width: 200
                    },</text>
                                }
                    {
                        field: "CustomerEmail",
                        title: "@T("Admin.Orders.Fields.Customer")",
                        width: 300,

                    },  {
                        field: "OrderTotal",
                        title: "@T("Admin.Orders.Fields.OrderTotal")",
                        width: 200,
                        format: "{0:đ}"
                    }, {
                        field: "LuongVe",
                        title: "@T("Admin.Orders.Fields.LuongVe")",
                        width: 100,
                        
                    },{
                        field: "CreatedOn",
                        title: "@T("Admin.Orders.Fields.NgayTao")",
                        width: 200,
                        type: "date",
                        format: "{0:G}"
                    },

                    {
                        field: "Id",
                        title: "@T("Admin.Common.Edit")",
                        width: 100,
                        template: '<a href="Edit/#=Id#">@T("Admin.Common.Edit")</a>'
                    }
                ]
            } );
        });
        function additionalData() {
            return {
                CustomerEmail: $('#@Html.FieldIdFor(model => model.CustomerEmail)').val(),
                OrderStatusId: $('#@Html.FieldIdFor(model => model.OrderStatusId)').val(),
                PaymentStatusId: $('#@Html.FieldIdFor(model => model.PaymentStatusId)').val(),
                ShippingStatusId: $('#@Html.FieldIdFor(model => model.ShippingStatusId)').val(),

            };
        }
    </script>


}







