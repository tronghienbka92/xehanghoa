@model CustomerOrderListModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
     <link href="~/Themes/ChonVeV1/Content/css/AccountInfo.css" rel="stylesheet" />

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
@using Nop.Web.Models.Customer
@using Nop.Web.Models.Order;
@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.Orders })
}
<div class="MenuPage"> </div>

<div class="page account_info">
    <div class="page-title">
        <h1 class="account_title">QUẢN LÝ ĐƠN HÀNG</h1>
    </div>
    <div class="custom-page-box-div">
        @if (Model.RecurringOrders.Count > 0)
        {
            using (Html.BeginForm())
            {
        <div class="section recurring-payments">
            <div class="title">
                <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
            </div>
            <div id="legend">
                <legend></legend>
            </div>
            <div id="cart_items">
                <div class="table-responsive cart_info">
                    <table class="table table-condensed">
                        <thead>
                            <tr class="cart_menu">
                                <td class="a-center start-date">
                                    @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                </td>
                                <td class="a-center cycle-info">
                                    @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                </td>
                                <td class="a-center next-payment">
                                    @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                </td>
                                <td class="a-center total-cycles">
                                    @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                </td>
                                <td class="a-center cycles-remaining">
                                    @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                </td>
                                <td class="a-center initial-order">
                                    @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                </td>
                                <td class="a-center cancel">
                                    @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.RecurringOrders)
                                    {
                                    <tr>
                                        <td class="a-center start-date">
                                            @item.StartDate
                                        </td>
                                        <td class="a-center cycle-info">
                                            @item.CycleInfo
                                        </td>
                                        <td class="a-center next-payment">
                                            @item.NextPayment
                                        </td>
                                        <td class="a-center total-cycles">
                                            @item.TotalCycles
                                        </td>
                                        <td class="a-center cycles-remaining">
                                            @item.CyclesRemaining
                                        </td>
                                        <td class="a-center initial-order">
                                            <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderId)</a>
                                        </td>
                                        <td class="a-center cancel">
                                            @if (item.CanCancel)
                                                {
                                                <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="button-2 cancel-recurring-order-button" />
                                                }
                                        </td>
                                    </tr>
                                    }

                        </tbody>
                    </table>
                </div>

            </div>

        </div>
            }
            if (Model.CancelRecurringPaymentErrors.Count > 0)
            {
        <div class="alert alert-danger message-error">
            <ul>
                @foreach (var error in Model.CancelRecurringPaymentErrors)
                        {
                        <li>@error</li>
                        }
            </ul>
        </div>
            }
        }
        <div class="order-list">
            @if (Model.Orders.Count > 0)
            {
                foreach (var order in Model.Orders)
                {
            <div class="section order-item">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.OrderNumber"): @order.Id</strong>
                </div>
                <ul class="info">
                    <li>@T("Account.CustomerOrders.OrderStatus"): @order.OrderStatus</li>
                    <li>@T("Account.CustomerOrders.OrderDate"): @order.CreatedOn.ToString()</li>
                    <li>@T("Account.CustomerOrders.OrderTotal"): @order.OrderTotal</li>
                </ul>
                <div class="buttons">
                    @if (order.IsReturnRequestAllowed)
                            {
                            <input type="button" value="@T("Account.CustomerOrders.ReturnItems")" class="button-2 return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')" />
                            }
                    <input type="button" value="@T("Account.CustomerOrders.OrderDetails")" class="button-2 order-details-button" onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')" />
                </div>
            </div>
                }
            }
            else
            {
            @T("Account.CustomerOrders.NoOrders")
            }
        </div>
    </div>
</div>
